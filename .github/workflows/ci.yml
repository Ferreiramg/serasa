name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-style:
    runs-on: ubuntu-latest
    name: Code Style Check

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache/files
        key: dependencies-php-8.2-composer-${{ hashFiles('composer.json') }}

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Check code style with Pint
      run: vendor/bin/pint --test

    - name: Run PHPStan analysis
      run: vendor/bin/phpstan analyse --memory-limit=2G --level=4

  test:
    runs-on: ubuntu-latest
    needs: code-style
    
    strategy:
      matrix:
        php-version: [8.2, 8.3]
        laravel-version: [12.x]

    name: PHP ${{ matrix.php-version }} - Laravel ${{ matrix.laravel-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache/files
        key: dependencies-laravel-${{ matrix.laravel-version }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.json') }}

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel-version }}" --no-interaction --no-update
        composer install --prefer-dist --no-interaction

    - name: Execute tests with Pest
      run: vendor/bin/pest --coverage --min=70

    - name: Generate coverage report
      run: vendor/bin/pest --coverage-clover=coverage.xml --coverage-html=coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
